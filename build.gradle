plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.0'
}
def allureVersion = "2.19.0"
allure {
    report {
        version.set(allureVersion)
    }
    adapter { // отвечает за появление папочки build/allure-results
        aspectjWeaver.set(true) //обработка аннотации @Step
        frameworks {
            junit5 { //название фреймворка
                adapterVersion.set(allureVersion) //версия интеграции фреймворка и Allure
            }
        }
    }
}

repositories {
    mavenCentral()
}
dependencies {
    testImplementation(
            'com.codeborne:selenide:6.7.4',
            'com.github.javafaker:javafaker:1.0.2',
            'org.junit.jupiter:junit-jupiter-engine:5.9.1',
            'org.slf4j:slf4j-simple:2.0.1',
            'io.qameta.allure:allure-selenide:2.19.0'
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
tasks.withType(Test){
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging{
        lifecycle{
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task properties_test(type: Test){
    useJUnitPlatform {
        includeTags "properties"
    }
}
task fillFormTest(type: Test){
    useJUnitPlatform {
        includeTags "fillFormTest"
    }
}